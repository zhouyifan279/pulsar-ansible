###
# Copyright DataStax, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###


---
- hosts: pulsarServer
  any_errors_fatal: true
  become: "{{ sudo_needed }}"
  become_method: sudo
  roles: 
    # Enable "srv_select_criteria" variable for server selection
    - { role: pulsar/common/pulsar_setGlobalVars }

# Start Zookeeper servers
- hosts: zookeeper
  any_errors_fatal: true
  become: "{{ sudo_needed }}"
  become_method: sudo
  vars:
    srvStarted: true
    srv_ports: ["{{ zk_clnt_port }}"]
  roles: 
    # Check the current status of zookeepers
    - { role: misc/_check_svc_status, when: srv_select_criteria }
    # Start zookepers
    - { role: pulsar/common/pulsar_startSvc, srv_options: "{{ zk_jvm_options|trim|replace('\n',' ') }}", 
        when: srv_select_criteria }

# Start Bookkeeper nodes
- hosts: bookkeeper
  any_errors_fatal: false
  become: "{{ sudo_needed }}"
  become_method: sudo
  vars:
    srvStarted: true
    srv_component: 'bookkeeper'
    srv_component_internal: 'bookie'
    srv_ports: ["{{ bookie_listening_port }}"]
  roles: 
    # Check the current status of bookies
    - { role: misc/_check_svc_status, when: srv_select_criteria }
    # Start bookies
    - { role: pulsar/common/pulsar_startSvc, srv_options: "{{ bookie_jvm_options|trim|replace('\n',' ') }}", 
        when: srv_select_criteria }

# - Sanity test of whether bookies are up and running properly
- hosts: bookkeeper
  run_once: true
  vars:
    srv_component: 'bookkeeper'
    srv_component_internal: 'bookie'
  roles:
    - { role: pulsar/bookie/bkie_sanityCheck, srv_options: "{{ bookie_jvm_options_b|trim|replace('\n',' ') }}", 
        when: srv_select_criteria }

# Start Pulsar broker nodes
- hosts: broker
  any_errors_fatal: true
  become: "{{ sudo_needed }}"
  become_method: sudo
  vars:
    srvStarted: true
    srv_ports: [
        "{% if enable_brkr_tls is defined and enable_brkr_tls|bool %}{{ web_svc_port_tls }}{% else %}{{ web_svc_port }}{% endif %}",
        "{% if enable_brkr_tls is defined and enable_brkr_tls|bool %}{{ broker_svc_port_tls }}{% else %}{{ broker_svc_port }}{% endif %}"
      ] 
  roles: 
    # Check the current status of brokers
    - { role: misc/_check_svc_status, when: srv_select_criteria }
    # Start brokers
    - { role: pulsar/common/pulsar_startSvc, srv_options: "{{ broker_jvm_options|trim|replace('\n',' ') }}", 
        when: srv_select_criteria }

# Start dedicated autorecovery nodes, if relevant
- hosts: autorecovery
  gather_facts: true
  any_errors_fatal: true
  become: "{{ sudo_needed }}"
  become_method: sudo
  vars:
    srvStarted: true
    srv_ports: ["{{ autorecovery_stats_port }}"]
  roles: 
    # Check the current status of bookies
    - { role: misc/_check_svc_status, when: srv_select_criteria }
    # Start bookies
    - { role: pulsar/common/pulsar_startSvc, srv_options: "{{ autorecovery_jvm_options|trim|replace('\n',' ') }}", 
        when: srv_select_criteria and (autorecovery_option=="dedicated") }

# Start dedicated functions worker nodes, if relevant
- hosts: functions_worker
  gather_facts: true
  any_errors_fatal: true
  become: "{{ sudo_needed }}"
  become_method: sudo
  vars:
    hostNameStr2: "{{ private_ip | replace('.', '-') }}"
    srvStarted: true
    srv_key_name: "{{ srv_component }}.{{ hostNameStr2 }}.key-pk8.pem"
    srv_cert_name: "{{ srv_component }}.{{ hostNameStr2 }}.crt.pem"
    srv_ports: [
        "{% if enable_fwrkr_tls is defined and enable_fwrkr_tls|bool %}{{ funcs_worker_port_tls }}{% else %}{{ funcs_worker_port }}{% endif %}",
      ]
  roles:
    - { role: misc/_check_svc_status, 
        when: srv_select_criteria and deploy_functions_worker=='dedicated' }
    # Start functions worker
    - { role: pulsar/common/pulsar_startSvc, srv_options: "{{ funcs_worker_jvm_options|trim|replace('\n',' ') }}", 
        when: srv_select_criteria and deploy_functions_worker=='dedicated' }