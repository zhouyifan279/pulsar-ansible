###
# Copyright DataStax, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###


#
#  Pulsar broker specific settings
# -------------------------------------------
#
broker_conf_file: "{{ tgt_pulsar_inst_dir }}/conf/broker.conf"
broker_func_worker_file: "{{ tgt_pulsar_inst_dir }}/conf/functions_worker.yml"
pulsar_mem_broker: "{% if prod_jvm_setting|bool %}-Xms12g -Xmx12g -XX:MaxDirectMemorySize=12g{% else %}-Xms1g -Xmx1g{% endif %}"

broker_svc_port: 6650
broker_svc_port_tls: 6651
# Broker metrics are also exposed at port 8080, at path "/metrics"
web_svc_port: 8080
web_svc_port_tls: 8443

# extra JVM options to start brokers
component_pulsar_extra_opts: ""
component_pulsar_gc: "-XX:HeapDumpPath={{ tgt_pulsar_log_homedir }}/broker"
broker_jvm_options: > 
  {% if customize_jvm is defined and customize_jvm|bool %}PULSAR_MEM="{{ pulsar_mem_broker }}"{% endif %}
  {{ common_jvm_settings }}
  PULSAR_LOG_DIR="{{ tgt_pulsar_log_homedir }}/broker"

#
# Transaction support
# -------------------------------------------
#
enable_transaction: true


#
# Enable server side filtering
# -------------------------------------------
#
enable_srvside_msg_filtering: true
tgt_msg_filter_package_dir: "{{ tgt_pulsar_inst_dir }}/filters"

msg_filter_package_version: 4.1.1-alpha
msg_filter_package_name: "pulsar-jms-{{ msg_filter_package_version }}-nar.nar"

msg_filter_pkg_download_url_base: "https://github.com/datastax/pulsar-jms/releases/download"
msg_filter_pkg_download_url: "{{ msg_filter_pkg_download_url_base }}/{{ msg_filter_package_version }}/{{ msg_filter_package_name }}"


#
# Other configuration items
# -------------------------------------------
#
# NOTE 1: the following broker configuration parameters are automatically 
#         covered by the playbook and you don't need to add them in this section
#
# - [Mandatory Settings]
#    * zookeeperServers
#    * configurationStoreServers
#    * clusterName
#    * brokerServicePort
#    * webServicePort
#    * managedLedgerDefaultEnsembleSize
#    * managedLedgerDefaultWriteQuorum
#    * managedLedgerDefaultAckQuorum
#
# - [Security Related Settings]
#    * authenticationEnabled
#    * authenticationProviders
#    * authorizationEnabled
#    * superUserRoles
#    * tokenPublicKey
#    * brokerClientTlsEnabled
#    * brokerClientAuthenticationPlugin
#    * brokerClientAuthenticationParameters
#    * brokerServicePortTls
#    * webServicePortTls
#    * tlsKeyFilePath
#    * tlsCertificateFilePath
#    * tlsTrustCertsFilePath
#    * brokerClientTlsEnabled
#    * brokerClientTrustCertsFilePath
#
# - [Rack-awareness Related Settings]
#    * bookkeeperClientRackawarePolicyEnabled
#    * bookkeeperClientMinNumRacksPerWriteQuorum
#    * bookkeeperClientEnforceMinNumRacksPerWriteQuorum
#
# NOTE 2: for this section, please follow the following rules:
#   - use exactly the same config parameter names as in broker.conf file
#   - for boolean value, always quote the value as a string. Otherwise, python will 
#     change the boolean value as starting with Uppercase (e.g. True or False)
# 
misc_broker_config_dict: {
  forceDeleteTenantAllowed: 'true'             # default false
  , forceDeleteNamespaceAllowed: 'true'        # default false
  , allowAutoTopicCreation: 'true'             # default false
  , allowAutoSubscriptionCreation: 'true'      # default false
  , brokerDeleteInactiveTopicsEnabled: 'false'  # default true 
  , topicFencingTimeoutSeconds: '5'             # default 0
  , webSocketServiceEnabled: 'true'             # default false
  , bookkeeper_opportunisticStriping: 'true'    # default false
  , systemTopicEnabled: 'true'
  , topicLevelPoliciesEnabled: 'true'           # default false

  , managedLedgerCursorBackloggedThreshold: 2147483647 #10000  
  , managedLedgerCacheEvictionTimeThresholdMillis: 10000 #2000
  , managedLedgerCacheEvictionFrequency: 0.2    # 1 eviction for 5 seconds.
  , exposeConsumerLevelMetricsInPrometheus: 'false'
  , exposeProducerLevelMetricsInPrometheus: 'false'
  , exposeManagedCursorMetricsInPrometheus: 'false'
  , loadBalancerNamespaceBundleMaxSessions: 0 # default 1000, disable bundle split based on cons, prod count
  , maxMessagePublishBufferSizeInMB: 500
  , bookkeeperClientExposeStatsToPrometheus: true

  # configure a smaller managed ledger cache, this is the main trigger of OODM
  # this is the logical size of the memory used by the cache 
  # the actual DirectMemory used by the JVM due to the cache is X times bigger than this value
  # this is due to how Netty pools memory 
  , managedLedgerCacheSizeMB: 512

  #----------------------------------------------------------------------
  # Sometimes especially with custom build, there might be some settings
  # not generally available in the official Pulsar build yet. Put these
  # settings below as experimental features.
  #
  # For builds that don't support these settings, just leave them as is and
  # they will be ignored.
  #----------------------------------------------------------------------
  , dispatchThrottlingForFilteredEntriesEnabled: 'true'

  , bookkeeper_waitTimeoutOnBackpressureMs: 50    # back pressure setting

  # prevents to perform too many reads from storage and cache
  , managedLedgerMaxReadsInFlightSizeInMB: 100

  # Use the cache for tailing reads only for subscriptions that are not backlogged
  , cacheEvictionByMarkDeletedPosition: false #'true'

  # configuration for caching data read by backlogged cursors
  , managedLedgerMinimumBacklogCursorsForCaching: 3 #4
  , managedLedgerMinimumBacklogEntriesForCaching: 1 #1000
  , managedLedgerMaxBacklogBetweenCursorsForCaching: 1000000 #20000
  ## settings for disabling the above feature of catch-up readcaching
  #, managedLedgerMinimumBacklogCursorsForCaching: 0
  #, managedLedgerMinimumBacklogEntriesForCaching: 1000
  #, managedLedgerMaxBacklogBetweenCursorsForCaching: 1000
  
  , allowAutoTopicCreationType: "partitioned"
  , brokerEntryMetadataInterceptors: "org.apache.pulsar.common.intercept.AppendIndexMetadataInterceptor"
}